<blueprint default-activation="eager"
           xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:jaxrs="http://cxf.apache.org/blueprint/jaxrs"
           xmlns:cxf="http://cxf.apache.org/blueprint/core"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd

  http://cxf.apache.org/blueprint/jaxrs http://cxf.apache.org/schemas/blueprint/jaxrs.xsd
  http://cxf.apache.org/blueprint/core http://cxf.apache.org/schemas/blueprint/core.xsd">


    <!-- REST service -->

    <bean id="cxfServlet" class="org.apache.cxf.transport.servlet.CXFServlet"/>

    <bean id="jsonProvider" class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>

    <bean id="authorizationInterceptor" class="bi.meteorite.core.security.authorization.TokenAuthorizingInterceptor">
        <property name="methodRolesMap">
            <map>
                <entry key="getExistingUsers" value="ROLE_ADMIN"/>
            </map>
        </property>
    </bean>

    <jaxrs:server id="taskService" address="/rest/core">
        <jaxrs:inInterceptors>
            <bean class="bi.meteorite.core.security.authentication.CustomHttpAuthenticationFaultHandler">
                <property name="realm" value="karaf"/>
            </bean>
        </jaxrs:inInterceptors>
        <jaxrs:serviceBeans>
            <ref component-id="userRestServiceBean"/>
            <ref component-id="userAuthenticationImpl"/>
        </jaxrs:serviceBeans>

        <jaxrs:providers>
            <!-- Binding Providers -->
            <ref component-id="jsonProvider"/>
            <ref component-id="authorizationFilter"/>
            <ref component-id="authenticationFilter"/>
            <ref component-id="tokenResponseFilter"/>
            <!-- Exception Mappers -->
            <bean class="org.apache.cxf.rs.security.cors.CrossOriginResourceSharingFilter" />

        </jaxrs:providers>
        <jaxrs:features>
            <cxf:logging/>
            <!--<bean class="org.apache.cxf.interceptor.security.TokenAuthenticationFeature">
                <property name="contextName" value="karaf"/>
                <property name="reportFault" value="true"/>
            </bean>-->
        </jaxrs:features>
        <!--<jaxrs:extensionMappings>
             <entry key="json" value="application/json" />
         </jaxrs:extensionMappings>-->
    </jaxrs:server>

    <!-- Services -->
    <service id="servletFilterService" interface="javax.servlet.Filter">
        <service-properties>
            <entry key="urlPatterns" value="/services/*"/>
        </service-properties>
        <bean class="bi.meteorite.core.security.SecurityFilter">
            <property name="tokenProvider" ref="tokenProvider-"/>
            <property name="adminLoginService" ref="adminLoginService-"/>
        </bean>
    </service>
    <service id="securityFilterExp" interface="javax.servlet.Filter">
        <bean class="bi.meteorite.core.security.SecurityFilter">
            <property name="tokenProvider" ref="tokenProvider-"/>
            <property name="adminLoginService" ref="adminLoginService-"/>
        </bean>
    </service>
    <!-- Mounts the CXF endpoint on /services -->
    <!--   <service interface="javax.servlet.http.HttpServlet" ref="cxfServlet">
           <service-properties>
               <entry key="alias" value="/services"/>
               <entry key="servlet-name" value="bi.meteorite.core.api"/>
           </service-properties>
       </service>-->

    <bean id="authenticationFilter" class="bi.meteorite.core.security.authentication.TokenJAASAuthenticationFilter">
        <!-- Name of the JAAS Context -->
        <property name="contextName" value="karaf"/>
        <property name="tokenProvider" ref="tokenProvider-"/>
    </bean>

</blueprint>